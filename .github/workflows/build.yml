name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # Продолжать сборку других целей при ошибке
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: mango-launcher
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary: mango-launcher.exe
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            binary: mango-launcher.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary: mango-launcher
          - os: macos-latest
            target: aarch64-apple-darwin
            binary: mango-launcher

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Build binary
      run: cargo build --verbose --release --target ${{ matrix.target }}

    - name: Package Binary
      shell: bash
      run: |
        staging="mango-launcher-${{ matrix.target }}"
        mkdir -p "$staging"
        
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          cp "target/${{ matrix.target }}/release/${{ matrix.binary }}" "$staging/"
          7z a "$staging.zip" "./$staging/"
        else
          cp "target/${{ matrix.target }}/release/${{ matrix.binary }}" "$staging/"
          tar -czf "$staging.tar.gz" "$staging"
        fi

    - name: Upload Artifact (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.target }}
        path: mango-launcher-${{ matrix.target }}.zip
        if-no-files-found: error

    - name: Upload Artifact (Unix)
      if: matrix.os != 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.target }}
        path: mango-launcher-${{ matrix.target }}.tar.gz
        if-no-files-found: error

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: List artifacts
        run: ls -R

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            */*.zip
            */*.tar.gz
          draft: false
          prerelease: ${{ contains(github.ref, '-pre') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 